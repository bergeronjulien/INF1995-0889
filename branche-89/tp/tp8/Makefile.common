########                      AVR Project Makefile                     ########
#####                                                                     #####
#####                    Makefile produit et ecrit par                    #####
#####                   Simon Barrette & Jerome Collin                    #####
#####                                                                     #####
#####                             Adapte par                              #####
#####                            Equipe 08-89                             #####
#####                                                                     #####
#####                                pour                                 #####
#####                           INF1995 - H2017                           #####
#####                                                                     #####
#####                        Inspire de Pat Deegan                        #####
#####                Psychogenic Inc (www.psychogenic.com)                #####
#####                                                                     #####
#####                Adaptation inspire de Maxime Perusse                 #####
#####                  https://github.com/maperr/inf1995                  #####
#####                                                                     #####
###############################################################################

# Nom du microcontroleur cible
MCU=atmega324pa

# Fichiers sources du projet
PRJSRC=$(SRC)

# Niveau d'optimization
# Utilisez s (size opt), 1, 2, 3 ou 0 (off)
OPTLEVEL=s

# Programmer ID - Ne pas changer 
# Liste complete des IDs disponible avec avrdude
AVRDUDE_PROGRAMMERID=usbasp

################################## Variables ##################################

# Compilateur utilise
CC=avr-gcc

# Pour copier le contenu d'un fichier objet vers un autre
OBJCOPY=avr-objcopy

# Pour permettre le transfert vers le microcontroleur
AVRDUDE=avrdude

# Pour supprimer les fichiers lorsque l'on appelle make clean
REMOVE=rm -f

# HEXFORMAT -- format pour les fichiers produient .hex
HEXFORMAT=ihex

########################### Options de compilation ############################

# Flags pour le compilateur en C
CFLAGS=-I. -MMD $(INC) -g -mmcu=$(MCU) -O$(OPTLEVEL) \
	-fpack-struct -fshort-enums             \
	-funsigned-bitfields -funsigned-char    \
	-Wall                                        

# Flags pour le compilateur en C++
CPPFLAGS=-fno-exceptions     

# Linker pour lier les librairies utilisees
LDFLAGS=-Wl,-Map,$(TRG).map -mmcu=$(MCU)

############################# Cible HEX (Target) ##############################

# Nom des cibles hex par defaut
HEXROMTRG=$(PROJECTNAME).hex
HEXTRG=$(HEXROMTRG) $(PROJECTNAME).ee.hex

################### Definition de tout les fichiers objets ####################

# Cette fonction permet de differencier les fichiers .c
# des fichiers .cpp
# Fichier C
CFILES=$(filter %.c, $(PRJSRC))

# Fichier C++
CPPFILES=$(filter %.cpp, $(PRJSRC))

# Liste de tout les fichiers objet que nous devons creer
OBJDEPS=$(CFILES:.c=.o) \
	$(CPPFILES:.cpp=.o)

##################### Creation des commandes du Makefile ######################

# Creation des cibles Phony (Phony Target)
# En plus de la commande make qui permet de compiler
# votre projet, vous pouvez utilisez les commandes
# make all, make install et make clean
.PHONY: all install clean 

# Make all permet simplement de compiler le projet
all: $(TRG)

$(TRG): $(OBJDEPS)
	$(TRG_CMD)

# Production des fichiers object
# De C a objet
%.o: %.c
	$(CC) $(CFLAGS) $(INCL) -c $<

# De C++ a objet
%.o: %.cpp
	$(CC) $(CFLAGS) $(CXXFLAGS) $(INCL) -c $<

# Verification des dependances (header dependencies)
-include *.d

# Production des fichiers hex a partir des fichiers elf
%.hex: %.out
	$(OBJCOPY) -j .text -j .data \
		-O $(HEXFORMAT) $< $@

# Make install permet de compiler le projet puis
# d'ecrire le programme en memoire flash dans votre
# microcontroleur. Celui-ci doit etre branche par cable USB
install: $(HEXROMTRG)				
	$(AVRDUDE) -c $(AVRDUDE_PROGRAMMERID)   \
	-p $(MCU) -P -e -U flash:w:$(HEXROMTRG)

# Make clean permet d'effacer tout les fichiers generes
# lors de la compilation
clean:
	$(REMOVE) $(TRG) $(TRG).map $(OBJDEPS) $(HEXTRG) *.d

##################################### EOF #####################################